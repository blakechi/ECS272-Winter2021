{"version":3,"sources":["components/Drawer.jsx","components/BarChart.jsx","components/Selector.jsx","components/YearSlider.jsx","components/MultiSelector.jsx","components/TopKSlider.jsx","components/GlobalControlPanel.jsx","components/Donut.jsx","components/DonutsPanel.jsx","components/DonutControlPanel.jsx","components/Marker.jsx","components/Map.jsx","components/Test.jsx","uitls/getGeocodePromise.js","components/FocusPage.jsx","components/Chord.jsx","components/OverviewPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","drawer","width","Drawer","props","anchor","drawerInfo","setDrawerInfo","toggleDrawer","classes","itemsList","text","onClick","page","className","open","onClose","List","map","item","ListItem","button","ListItemText","primary","margin","defaults","BarChart","data","xAxisName","fineSelect","topK","yearRange","rest","ref","useRef","height","useEffect","filteredData","getFilteredData","innerWidth","innerHeight","svg","d3","current","t","transition","duration","bandwidth","x","domain","d","rangeRound","length","y","count","selectAll","join","enter","append","style","attr","call","update","exit","remove","on","event","currentTarget","select","g","clone","Fragment","viewBox","preserveAspectRatio","transform","constraints","options","filter","value","includes","ele","sort","a","b","A","B","slice","React","memo","Selector","name","label","onChange","disabled","theme","xAxis","formControl","spacing","maxWidth","window","fontSize","marginTop","FormControl","InputLabel","shrink","id","Select","labelId","displayEmpty","autoWidth","MenuItem","valuetext","YearSlider","range","marks","yearSlider","Typography","gutterBottom","Slider","defaultValue","step","min","max","valueLabelDisplay","aria-labelledby","getAriaValueText","MultipleSelector","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","input","Input","multiple","renderValue","selected","idx","disabledOptions","Checkbox","checked","indexOf","TopKSlider","withWidth","toolTipHTML","tip","i","key","Donut","title","category","padAngle","cornerRadius","dataLength","colorScale","radius","Math","pie","arc","outerRadius","innerRadius","html","left","top","right","bottom","target","selections","donutsData","selectedName","counts","Object","keys","donutsTarget","donutsSelect","Wrapper","styled","div","Marker","color","alt","backgroundColor","defaultProps","Map","state","colorScale30","getMarkerData","fineSelectValue","markerData","address","Locations","latitude","Latitude","longitude","Longitude","uniqueTarget","Set","this","center","zoom","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","lat","lng","Component","Test","console","log","children","getGeocodePromise","Promise","resolve","setTimeout","axios","get","params","progress","root","flexGrow","display","paper","padding","marginBottom","palette","secondary","justifyContent","flexDirection","FocusPage","setData","visible","useState","setXAxis","setFineSelect","setTopK","setYearSlider","setDonutsTarget","optionsDisable","setDonutsSelect","geoLoading","setGeoLoading","years","apply","allXAxisName","handleFineSelectChange","updateGeocode","newData","getFineSelectOptions","elementName","result","getDataInYearRange","promises","all","then","responses","response","results","geometry","location","undefined","locations","forEach","error","catch","LinearProgress","variant","Grid","container","alignItems","xs","direction","Paper","fineSelectOptions","newValue","node","parent","bilink","leaves","incoming","outgoing","imports","o","push","construct_children","tgtData","tgtInfo","restsInfo","tgt","size","connections","list","prefix","concat","reduce","acc","curr","hierachy_SF","uniTitle","uniLoc","uniDirector","titleInfo","locInfo","directorInfo","getColumnUniCount","columnName","tgtList","tmp_counts","uniCounts","entries","others","Chord","horizontalShift","colorin","colorout","node_color","Title","Location","Director","tree","PI","line","curve","beta","angle","data_hierachy","replaceAll","each","link","path","raise","flatMap","leaf","OverviewPage","titleContainer","boxSizing","paddingLeft","paddingTop","fontWeight","fontFamily","iconBtn","position","icon","App","loading","setLoading","csv","process","type","isVisible","pageName","IconButton","onKeyDown","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f88336f2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Drawer as MUIDrawer, ListItem, List, ListItemText } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n    drawer: {\n        width: \"10%\",\n    },\n});\n\nconst Drawer = (props) => {\n    const { anchor, drawerInfo, setDrawerInfo, toggleDrawer } = props;\n    const classes = useStyles();\n    const itemsList = [\n        {\n            text: \"Overview\",\n            onClick: () => {\n                setDrawerInfo({ ...drawerInfo, page: \"Overview\" });\n            },\n        },\n        {\n            text: \"Focus\",\n            onClick: () => {\n                setDrawerInfo({ ...drawerInfo, page: \"Focus\" });\n            },\n        },\n    ];\n    return (\n        <MUIDrawer\n            className={classes.drawer}\n            anchor={anchor}\n            open={drawerInfo[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {itemsList.map((item) => {\n                    const { text, onClick } = item;\n                    return (\n                        <ListItem button key={text} onClick={onClick}>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </MUIDrawer>\n    );\n};\n\nexport default Drawer;\n","import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nconst margin = {\n    top: 20,\n    right: 50,\n    bottom: 150,\n    left: 50,\n};\nconst defaults = {\n    width: 1200,\n    height: 800,\n    bandwidth: 24,\n};\n\nfunction BarChart({ data, xAxisName, fineSelect, topK, yearRange, ...rest }) {\n    const ref = useRef();\n\n    const width = rest.width || defaults.width;\n    const height = rest.height || defaults.height;\n\n    useEffect(() => {\n        const filteredData = getFilteredData(data, { xAxisName, fineSelect, topK, yearRange });\n\n        const innerWidth = width - margin.left - margin.right;\n        const innerHeight = height - margin.top - margin.bottom;\n\n        const svg = d3.select(ref.current);\n\n        const t = svg.transition().duration(1500);\n        const bandwidth = defaults.bandwidth;\n\n        const x = d3\n            .scaleBand()\n            .domain(filteredData.map((d) => d[xAxisName]))\n            .rangeRound([margin.left, margin.left + bandwidth * filteredData.length]);\n\n        const y = d3\n            .scaleLinear()\n            .domain([0, d3.max(filteredData.map((d) => d.count))])\n            .rangeRound([margin.top + innerHeight, margin.top]);\n\n        const bars = svg\n            .selectAll(\"rect\")\n            .data(filteredData, (d) => d)\n            .join(\n                (enter) =>\n                    enter\n                        .append(\"rect\")\n                        .style(\"mix-blend-mode\", \"multiply\")\n                        .attr(\"fill\", \"cornflowerblue\")\n                        .attr(\"opacity\", \".8\")\n                        .attr(\"x\", innerWidth + margin.right)\n                        .attr(\"y\", (d) => y(d.count))\n                        .attr(\"width\", x.bandwidth() - 1)\n                        .attr(\"height\", (d) => y(0) - y(d.count))\n                        .call((enter) => enter.transition(t).attr(\"x\", (d) => x(d[xAxisName]))),\n                (update) => update,\n                // .attr(\"width\", x.bandwidth() - 1)\n                // .call((update) => update.transition(t).attr(\"x\", (d) => x(d[xAxisName]))),\n                (exit) =>\n                    exit.call((exit) =>\n                        exit\n                            .transition(t)\n                            .attr(\"fill\", \"tomato\")\n                            .attr(\"width\", 0)\n                            .attr(\"height\", 0)\n                            .remove()\n                    )\n            );\n\n        bars.on(\"mouseenter\", (event, d) => {\n            d3.select(event.currentTarget).attr(\"opacity\", \"1.\");\n            svg.append(\"text\")\n                .attr(\"id\", \"tooltip\")\n                .attr(\"x\", x(d[xAxisName]) + x.bandwidth() / 2)\n                .attr(\"y\", y(d.count))\n                .attr(\"dy\", \"-.35em\")\n                .attr(\"font-size\", 20)\n                .text(`${xAxisName}: ` + d[xAxisName] + \" / Count: \" + d.count);\n        }).on(\"mouseout mouseleave\", (event) => {\n            d3.select(event.currentTarget).attr(\"opacity\", \".8\");\n            svg.select(\"#tooltip\").remove();\n        });\n\n        const xAxis = (g) =>\n            g\n                .attr(\"transform\", `translate(0,${margin.top + innerHeight})`)\n                .call(d3.axisBottom(x))\n                .select(\".domain\")\n                .remove();\n\n        const yAxis = (g) =>\n            g\n                .attr(\"transform\", `translate(${margin.left},0)`)\n                .call(d3.axisLeft(y))\n                .select(\".domain\")\n                .remove();\n\n        svg.select(\"#x-axis-label\").remove();\n        svg.append(\"text\")\n            .attr(\"id\", \"x-axis-label\")\n            .attr(\n                \"transform\",\n                \"translate(\" +\n                    (innerWidth / 2 + margin.left) +\n                    \" ,\" +\n                    (innerHeight + margin.top + 40) +\n                    \")\"\n            )\n            .attr(\"fill\", \"#737373\")\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"font-size\", 25)\n            .attr(\"text-anchor\", \"middle\")\n            .text(xAxisName);\n\n        svg.select(\"#y-axis\").remove();\n        svg.append(\"g\")\n            .attr(\"id\", \"y-axis\")\n            .call(yAxis)\n            .call((g) =>\n                g\n                    .select(\".tick:last-of-type text\")\n                    .clone()\n                    .attr(\"text-anchor\", \"end\")\n                    .attr(\"font-size\", 25)\n                    .attr(\"x\", margin.top)\n                    .attr(\"y\", -margin.left - 5)\n                    .attr(\"transform\", `rotate(-90)`)\n                    .text(\"Row Count\")\n            );\n    }, [width, height, data, xAxisName, fineSelect, topK, yearRange]);\n\n    return (\n        <React.Fragment>\n            <div>Bar Chart</div>\n            <svg viewBox={`0 0 ${width} ${height}`} preserveAspectRatio=\"xMidYMid meet\">\n                <g ref={ref} transform={`translate(${margin.left}, ${margin.top})`}></g>\n            </svg>\n        </React.Fragment>\n    );\n}\n\nconst getFilteredData = (data, constraints) => {\n    const { xAxisName, fineSelect, topK, yearRange } = constraints;\n    return (\n        fineSelect.options\n            // if no fine selections, every d passes\n            // if fine selections exist, return the relevant data\n            .filter((d) => fineSelect.value.length === 0 || fineSelect.value.includes(d))\n            .map((d) => ({\n                [xAxisName]: d,\n                count: data.filter(\n                    (ele) =>\n                        yearRange[0] <= ele[\"Release Year\"] &&\n                        ele[\"Release Year\"] <= yearRange[1] &&\n                        ele[xAxisName] === d\n                ).length,\n            }))\n            .sort((a, b) => {\n                var A = a.count;\n                var B = b.count;\n                if (A < B) {\n                    return 1;\n                }\n                if (A > B) {\n                    return -1;\n                }\n\n                return 0; // if equal\n            })\n            .slice(0, topK)\n    );\n};\n\nexport default React.memo(BarChart);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst Selector = ({ name, label, value, options, onChange, disabled = false, ...rest }) => {\n    const useStyles = makeStyles((theme) => ({\n        xAxis: {\n            width: \"90%\",\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            width: \"100%\",\n            maxWidth: `${window.innerWidth / 6 - 64}px`,\n        },\n        label: {\n            fontSize: 19,\n        },\n        select: {\n            \"& .MuiSelect-select\": {\n                marginTop: theme.spacing(2),\n            },\n            \"& .MuiSelect-icon\": {\n                marginTop: theme.spacing(1),\n            },\n        },\n    }));\n    const classes = useStyles();\n\n    return (\n        <div className={classes.xAxis}>\n            <FormControl className={classes.formControl}>\n                <InputLabel shrink className={classes.label} id={`${name}-label`}>\n                    {label}\n                </InputLabel>\n                <Select\n                    className={classes.select}\n                    labelId={`${name}-label`}\n                    id={`${name}-placeholder-label`}\n                    value={value}\n                    onChange={onChange}\n                    disabled={disabled}\n                    displayEmpty\n                    autoWidth\n                >\n                    <MenuItem value=\"\">\n                        <em>(No Value)</em>\n                    </MenuItem>\n                    {options.map((ele) => (\n                        <MenuItem key={ele} value={ele}>\n                            {ele}\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </div>\n    );\n};\n\nexport default Selector;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\nfunction valuetext(value) {\n    return \"\";\n}\n\nexport default function YearSlider({ name, label, value, range, marks, onChange, ...rest }) {\n    const useStyles = makeStyles((theme) => ({\n        yearSlider: {\n            margin: theme.spacing(1),\n        },\n        label: {\n            fontSize: 14,\n        },\n    }));\n    const classes = useStyles();\n\n    return (\n        <div key={name} className={classes.yearSlider}>\n            <Typography className={classes.label} id={`${name}-range-slider`} gutterBottom>\n                {label}\n            </Typography>\n            <Slider\n                defaultValue={value}\n                value={value}\n                marks={marks}\n                step={null}\n                min={range[0]}\n                max={range[1]}\n                onChange={onChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby={`${name}-range-slider`}\n                getAriaValueText={valuetext}\n            />\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nexport default function MultipleSelector({\n    name,\n    label,\n    value,\n    options,\n    disabled,\n    onChange,\n    ...rest\n}) {\n    const useStyles = makeStyles((theme) => ({\n        fineSelect: {\n            width: \"90%\",\n        },\n        formControl: {\n            margin: theme.spacing(1),\n            width: \"100%\",\n            maxWidth: `${window.innerWidth / 6 - 64}px`,\n        },\n        label: {\n            fontSize: 19,\n        },\n        select: {\n            \"& .MuiSelect-select\": {\n                marginTop: theme.spacing(2),\n            },\n            \"& .MuiSelect-icon\": {\n                marginTop: theme.spacing(1),\n            },\n        },\n    }));\n    const MenuProps = {\n        PaperProps: {\n            style: {\n                maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                width: rest.width,\n            },\n        },\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.fineSelect}>\n            <FormControl className={classes.formControl}>\n                <InputLabel shrink className={classes.label} id={`${name}-multiple-chip-label`}>\n                    {label}\n                </InputLabel>\n                <Select\n                    className={classes.select}\n                    labelId={`${name}-multiple-chip-label`}\n                    id={`${name}-multiple-chip`}\n                    value={value}\n                    input={<Input />}\n                    disabled={disabled}\n                    onChange={onChange}\n                    displayEmpty\n                    multiple\n                    renderValue={(selected) => selected.join(\", \")}\n                    MenuProps={MenuProps}\n                    autoWidth\n                >\n                    {options.map((ele, idx) => (\n                        <MenuItem\n                            key={ele}\n                            value={ele}\n                            disabled={rest.disabledOptions ? rest.disabledOptions[idx] : false}\n                        >\n                            <Checkbox checked={value.indexOf(ele) > -1} />\n                            <ListItemText primary={ele} />\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Slider from \"@material-ui/core/Slider\";\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\nexport default function TopKSlider({\n    name,\n    label,\n    value,\n    range,\n    marks,\n    disabled,\n    onChange,\n    ...rest\n}) {\n    const useStyles = makeStyles((theme) => ({\n        topK: {\n            margin: theme.spacing(1),\n            // width: \"90%\",\n        },\n        label: {\n            fontSize: 14,\n        },\n    }));\n    const classes = useStyles();\n\n    return (\n        <div key={name} className={classes.topK}>\n            <Typography className={classes.label} id={`${name}-discrete-slider`} gutterBottom>\n                {label}\n            </Typography>\n            <Slider\n                defaultValue={value}\n                value={value}\n                getAriaValueText={valuetext}\n                aria-labelledby={`${name}-discrete-slider`}\n                valueLabelDisplay=\"auto\"\n                marks={marks}\n                step={1}\n                // step={range[1] - range[0]}\n                min={range[0]}\n                max={range[1]}\n                disabled={disabled}\n                onChange={onChange}\n            />\n        </div>\n    );\n}\n","import React from \"react\";\nimport { withWidth } from \"@material-ui/core\";\nimport Selector from \"./Selector\";\nimport YearSlider from \"./YearSlider\";\nimport MultipleSelector from \"./MultiSelector\";\nimport TopKSlider from \"./TopKSlider\";\n\nfunction GlobalControlPanel({ name, xAxis, fineSelect, topK, yearSlider, ...rest }) {\n    return (\n        <div id={name}>\n            <div className=\"panel-title\">Global Control</div>\n            <Selector {...xAxis} />\n            <MultipleSelector {...fineSelect} />\n            <TopKSlider {...topK} />\n            <YearSlider {...yearSlider} />\n        </div>\n    );\n}\n\nexport default withWidth()(GlobalControlPanel);\n","import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport \"../css/Donut.css\";\n\nconst Donut = ({ id, title, category, data, margin, padAngle, cornerRadius, ...rest }) => {\n    const ref = useRef();\n\n    // seems svg will be auto-resized eventually, so the how large they are doesn't matter (only effect text size)\n    const width = 90;\n    const height = 90;\n\n    useEffect(() => {\n        const dataLength = data.length;\n        const colorScale = d3\n            .scaleOrdinal()\n            .domain(data.map((d, idx) => idx))\n            .range(data.map((d, idx) => d3.interpolateSinebow(idx / dataLength)));\n        const radius = Math.min(width, height) / 2;\n\n        const svg = d3.select(ref.current);\n        const pie = d3\n            .pie()\n            .value((d) => d.count)\n            .sort(null);\n\n        // contructs and arc generator. This will be used for the donut. The difference between outer and inner\n        // radius will dictate the thickness of the donut\n        const arc = d3\n            .arc()\n            .outerRadius(radius * 0.8)\n            .innerRadius(radius * 0.6)\n            .cornerRadius(cornerRadius)\n            .padAngle(padAngle);\n\n        // this arc is used for aligning the text labels\n        // const outerArc = d3\n        //     .arc()\n        //     .outerRadius(radius * 0.9)\n        //     .innerRadius(radius * 0.9);\n\n        svg.select(`.${id}-slice`)\n            .selectAll(\"path\")\n            .data(pie(data))\n            .enter()\n            .append(\"path\")\n            .attr(\"d\", arc)\n            .attr(\"fill\", (d) => colorScale(d.data[category]))\n            .attr(\"opacity\", \".6\")\n            .attr(\"transform\", `translate(${radius}, ${radius})`)\n            .on(\"mouseover\", (event, d) => {\n                d3.select(event.currentTarget).transition().duration(50).attr(\"opacity\", \"1.\");\n                //Makes the new div appear on hover:\n\n                svg.append(\"circle\")\n                    .attr(\"class\", \"tooltip-circle\")\n                    .attr(\"r\", radius * 0.55) // radius of tooltip circle\n                    .attr(\"fill\", colorScale(d.data[category])) // colorScale based on category mouse is over\n                    .attr(\"opacity\", 1)\n                    .attr(\"transform\", `translate(${radius}, ${radius})`);\n                svg.append(\"text\")\n                    .attr(\"class\", \"tooltip-text\")\n                    .attr(\"transform\", `translate(${radius}, ${radius})`)\n                    .attr(\"dy\", -10) // hard-coded. can adjust this to adjust text vertical alignment in tooltip\n                    .html(toolTipHTML(d.data)) // add text to the circle.\n                    .style(\"font-size\", \"0.4em\")\n                    .style(\"text-anchor\", \"middle\"); // centres text in tooltip\n            })\n            .on(\"mouseout\", (event) => {\n                d3.select(event.currentTarget).attr(\"opacity\", \".6\");\n                d3.selectAll(\".tooltip-circle\").remove();\n                d3.selectAll(\".tooltip-text\").remove();\n            });\n\n        // svg.append(\"text\")\n        //     .attr(\"transform\", `translate(${radius}, ${radius})`)\n        //     .attr(\"dy\", 5)\n        //     .html(`${title}`) // add text to the circle.\n        //     .style(\"font-size\", \"0.7em\")\n        //     .style(\"text-anchor\", \"middle\"); // centres text in tooltip;\n\n        // svg.select(\".labelName\")\n        //     .datum(data)\n        //     .selectAll(\"text\")\n        //     .data(pie)\n        //     .enter()\n        //     .append(\"text\")\n        //     .attr(\"dy\", \".35em\")\n        //     .html((d) => d.data[category] + \": <tspan>\" + d.data.count + \"</tspan>\")\n        //     .attr(\"transform\", (d) => {\n        //         console.log(d);\n        //         // effectively computes the centre of the slice.\n        //         // see https://github.com/d3/d3-shape/blob/master/README.md#arc_centroid\n        //         let pos = outerArc.centroid(d);\n\n        //         // changes the point to be on left or right depending on where label is.\n        //         pos[0] = radius * 0.95 * (midAngle(d) < Math.PI ? 1 : -1);\n        //         return \"translate(\" + pos + \")\";\n        //     })\n        //     .style(\"text-anchor\", (d) =>\n        //         // if slice centre is on the left, anchor text to start, otherwise anchor to end\n        //         midAngle(d) < Math.PI ? \"start\" : \"end\"\n        //     );\n\n        // svg.select(\".lines\")\n        //     .datum(data)\n        //     .selectAll(\"polyline\")\n        //     .data(pie)\n        //     .enter()\n        //     .append(\"polyline\")\n        //     .attr(\"points\", (d) => {\n        //         // see label transform function for explanations of these three lines.\n        //         let pos = outerArc.centroid(d);\n        //         pos[0] = radius * 0.95 * (midAngle(d) < Math.PI ? 1 : -1);\n        //         return [arc.centroid(d), outerArc.centroid(d), pos];\n        //     });\n    }, [id, data, category, padAngle, cornerRadius, rest]);\n\n    return (\n        <React.Fragment>\n            <svg id={id} viewBox={`0 0 ${width} ${height}`}>\n                <g ref={ref} transform={`translate(${margin.left}, ${margin.top})`}>\n                    <g className={`${id}-slice`} />\n                    {/* <g className=\"labelName\" />\n                    <g className=\"lines\" /> */}\n                </g>\n            </svg>\n            <div className=\"donut-title\">{title}</div>\n        </React.Fragment>\n    );\n};\n\n// const midAngle = (d) => {\n//     return d.startAngle + (d.endAngle - d.startAngle) / 2;\n// };\nconst toolTipHTML = (d) => {\n    var tip = \"\",\n        i = 0;\n    for (const key in d) {\n        const value = d[key];\n\n        // leave off 'dy' attr for first tspan so the 'dy' attr on text element works. The 'dy' attr on\n        // tspan effectively imitates a line break.\n        if (i === 0) tip += value;\n        else tip += \" \" + key + \": \" + value;\n        // if (i === 0) tip += '<tspan x=\"0\">' + key + \": \" + value + \"</tspan>\";\n        // else tip += '<tspan x=\"0\" dy=\"1.2em\">' + key + \": \" + value + \"</tspan>\";\n        i++;\n    }\n\n    return tip;\n};\n\nexport default Donut;\n","import React from \"react\";\nimport withWidth from \"@material-ui/core/withWidth\";\nimport Donut from \"./Donut\";\n\nconst margin = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n};\nconst padAngle = 0.015;\nconst cornerRadius = 3;\n\nconst DonutsPanel = ({ data, constraints, ...rest }) => {\n    const { xAxisName, yearRange, target, selections } = constraints;\n\n    const filteredData = data.filter(\n        (ele) =>\n            yearRange[0] <= ele[\"Release Year\"] &&\n            ele[\"Release Year\"] <= yearRange[1] &&\n            ele[xAxisName] === target\n    );\n    const donutsData = selections.map((selectedName) => {\n        let counts = {};\n        for (const d of filteredData) {\n            counts[d[selectedName]] = 1 + (counts[d[selectedName]] || 0);\n        }\n\n        return Object.keys(counts).map((key) => ({\n            [selectedName]: key,\n            count: counts[key],\n        }));\n    });\n\n    return (\n        <React.Fragment>\n            <div>Donuts</div>\n            <div>\n                {target === \"\"\n                    ? \"\"\n                    : selections.map((ele, idx) => (\n                          <Donut\n                              id={`donut-${idx}`}\n                              key={ele}\n                              title={ele}\n                              category={ele}\n                              data={donutsData[idx]}\n                              margin={margin}\n                              padAngle={padAngle}\n                              cornerRadius={cornerRadius}\n                          />\n                      ))}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default withWidth()(DonutsPanel);\n","import React from \"react\";\nimport { withWidth } from \"@material-ui/core\";\nimport Selector from \"./Selector\";\nimport MultipleSelector from \"./MultiSelector\";\n\nfunction DonutControlPanel({ name, donutsTarget, donutsSelect }) {\n    return (\n        <div id={name}>\n            <div>Donut Control</div>\n            <Selector {...donutsTarget} />\n            <MultipleSelector {...donutsSelect} />\n        </div>\n    );\n}\n\nexport default withWidth()(DonutControlPanel);\n","// from https://github.com/google-map-react/google-map-react/blob/master/example/src/components/Marker.js\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 18px;\n    height: 18px;\n    border: 2px solid #fff;\n    border-radius: 100%;\n    user-select: none;\n    transform: translate(-50%, -50%);\n    cursor: ${(props) => (props.onClick ? \"pointer\" : \"default\")};\n    &:hover {\n        z-index: 1;\n    }\n`;\n\nconst Marker = ({ text, color, onClick }) => (\n    <Wrapper alt={text} onClick={onClick} style={{ backgroundColor: color }} />\n);\n\nMarker.defaultProps = {\n    onClick: null,\n};\n\nMarker.propTypes = {\n    onClick: PropTypes.func,\n    text: PropTypes.string.isRequired,\n};\n\nexport default Marker;\n","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport GoogleMapReact from \"google-map-react\";\n\nimport Marker from \"./Marker\";\n\nclass Map extends Component {\n    static defaultProps = {\n        center: {\n            lat: 37.7694208,\n            lng: -122.4262138,\n        },\n        zoom: 11,\n    };\n\n    state = {\n        colorScale30: d3\n            .scaleOrdinal()\n            .domain(d3.range(15))\n            .range(d3.range(15).map((d, idx) => d3.interpolateSinebow(idx / 15))),\n    };\n\n    getMarkerData = (data, constraints) => {\n        const { colorScale30 } = this.state;\n        const { xAxisName, fineSelectValue } = constraints;\n\n        var markerData = [];\n        if (fineSelectValue.length !== 0) {\n            markerData = data\n                .filter((ele) => fineSelectValue.includes(ele[xAxisName]))\n                .map((ele) => ({\n                    target: ele[xAxisName],\n                    address: ele.Locations,\n                    latitude: ele.Latitude,\n                    longitude: ele.Longitude,\n                }));\n\n            const uniqueTarget = [...new Set(markerData.map((ele) => ele.target))];\n\n            markerData = markerData.map((ele) => ({\n                ...ele,\n                color: colorScale30(uniqueTarget.indexOf(ele.target)),\n            }));\n        }\n\n        return markerData;\n    };\n\n    render() {\n        const { data, constraints, center, zoom } = this.props;\n        const markerData = this.getMarkerData(data, constraints);\n\n        return (\n            <React.Fragment>\n                <div>Map</div>\n                <div style={{ height: \"100%\", width: \"100%\" }}>\n                    <GoogleMapReact\n                        bootstrapURLKeys={{ key: \"AIzaSyALnnQIgYfZ4UyhBXfRUtTwmbnfoqBcTxA\" }}\n                        defaultCenter={center}\n                        defaultZoom={zoom}\n                        yesIWantToUseGoogleMapApiInternals\n                    >\n                        {markerData.map((ele, idx) => (\n                            <Marker\n                                key={idx}\n                                text={ele.address}\n                                lat={ele.latitude}\n                                lng={ele.longitude}\n                                color={ele.color}\n                            />\n                        ))}\n                    </GoogleMapReact>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Map;\n","import React from \"react\";\n\nconst Test = (props) => {\n    console.log(props);\n    return <div>{props.children}</div>;\n};\n\nexport default Test;\n","import axios from \"axios\";\n\nconst getGeocodePromise = async (address, idx = 0) => {\n    await new Promise((resolve) => {\n        setTimeout(resolve, 250 * idx); // avoid overaccess (no more 5 requests in 1 sec)\n    });\n\n    return await axios.get(\"https://maps.googleapis.com/maps/api/geocode/json\", {\n        params: {\n            address: address,\n            key: \"AIzaSyALnnQIgYfZ4UyhBXfRUtTwmbnfoqBcTxA\",\n        },\n    });\n};\nexport default getGeocodePromise;\n","import React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Paper, Grid, LinearProgress } from \"@material-ui/core\";\n\nimport BarChart from \"./BarChart\";\nimport GlobalControlPanel from \"./GlobalControlPanel\";\nimport DonutsPanel from \"./DonutsPanel\";\nimport DonutControlPanel from \"./DonutControlPanel\";\nimport Map from \"./Map\";\nimport Test from \"./Test\";\nimport getGeocodePromise from \"../uitls/getGeocodePromise\";\n\nconst useStyles = makeStyles((theme) => ({\n    progress: {},\n    root: {\n        flexGrow: 1,\n        marginTop: \"16px\",\n    },\n    item: {\n        display: \"flex\",\n    },\n    paper: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n    },\n}));\n\nconst FocusPage = (props) => {\n    const { data, setData, visible } = props;\n    const [xAxis, setXAxis] = useState({\n        name: \"x-axis\",\n        label: \"Columns\",\n        value: \"\",\n        options: [],\n    });\n    const [fineSelect, setFineSelect] = useState({\n        name: \"fine-select\",\n        label: \"Rows\",\n        value: [],\n        options: [],\n        disabled: true,\n    });\n    const [topK, setTopK] = useState({\n        name: \"top-k\",\n        label: \"Top K\",\n        value: 50,\n        range: [1, 50],\n        marks: [\n            { value: 1, label: \"1\" },\n            { value: 50, label: \"50\" },\n        ],\n        disabled: false,\n    });\n    const [yearSlider, setYearSlider] = useState({\n        name: \"year\",\n        label: \"Year\",\n        value: [],\n        range: [],\n        marks: [],\n    });\n    const [donutsTarget, setDonutsTarget] = useState({\n        name: \"donuts-target-selector\",\n        label: \"Target for Donuts\",\n        value: \"\",\n        options: [],\n        disabled: true,\n    });\n    const [donutsSelect, setDonutsSelect] = useState({\n        name: \"donuts-muti-selector\",\n        label: \"Donut Topic\",\n        value: [],\n        options: [],\n        disabled: true,\n        optionsDisable: [],\n    });\n    const [geoLoading, setGeoLoading] = useState(false);\n\n    useEffect(() => {\n        const years = [...new Set(data.map((ele) => ele[\"Release Year\"]))].sort();\n        const yearRange = [Math.min.apply(null, years), Math.max.apply(null, years)];\n        const allXAxisName = Object.keys(data[0]).slice(0, -3);\n\n        setXAxis((xAxis) => ({\n            ...xAxis,\n            options: allXAxisName,\n        }));\n        setYearSlider((yearSlider) => ({\n            ...yearSlider,\n            value: yearRange,\n            range: yearRange,\n            marks: years.map((d) => {\n                return { value: d, label: null };\n            }),\n        }));\n        setDonutsSelect((donutsSelect) => ({\n            ...donutsSelect,\n            options: allXAxisName,\n            disabledOptions: allXAxisName.map((ele) => false),\n        }));\n    }, [data]);\n\n    const handleXAxisChange = (event) => {\n        const { value } = event.target;\n        setXAxis((xAxis) => ({\n            ...xAxis,\n            value: value,\n        }));\n\n        // new X axis, new options for fine select\n        const fineSelectOptions = getFineSelectOptions(value);\n        setFineSelect((fineSelect) => ({\n            ...fineSelect,\n            value: [],\n            options: value === \"\" ? [] : fineSelectOptions,\n            disabled: value === \"\" ? true : false,\n        }));\n        setDonutsTarget((donutsTarget) => ({\n            ...donutsTarget,\n            value: \"\",\n            options: value === \"\" ? [] : fineSelectOptions,\n            disabled: value === \"\" ? true : false,\n        }));\n\n        const disabledOptions = donutsSelect.options.map((ele) => (ele === value ? true : false));\n        disabledOptions[xAxis.options.indexOf(value)] = true;\n        setDonutsSelect((donutsSelect) => ({\n            ...donutsSelect,\n            disabledOptions: disabledOptions,\n        }));\n    };\n    const handleFineSelectChange = async (event) => {\n        const { value } = event.target;\n\n        // get Geocode if \"Latitude\" or \"Longitude\" of the selected data is null\n        const newData = await updateGeocode(value);\n        setData(newData);\n\n        setFineSelect((fineSelect) => ({\n            ...fineSelect,\n            value: value,\n        }));\n        setDonutsTarget((donutsTarget) => ({\n            ...donutsTarget,\n            value: \"\",\n            options: value.length === 0 ? fineSelect.options : value,\n        }));\n    };\n    const handleTopKChange = (event, newValue) => {\n        setTopK((topK) => ({\n            ...topK,\n            value: newValue,\n        }));\n    };\n    const handleYearSliderChange = (event, newValue) => {\n        setYearSlider((yearSlider) => ({\n            ...yearSlider,\n            value: newValue,\n        }));\n    };\n    const handleDonutsTargetChange = (event) => {\n        const { value } = event.target;\n        setDonutsTarget((donutsTarget) => ({\n            ...donutsTarget,\n            value: value,\n        }));\n\n        setDonutsSelect((donutsSelect) => ({\n            ...donutsSelect,\n            disabled: value === \"\",\n        }));\n    };\n    const handleDonutsSelectChange = (event) => {\n        const { value } = event.target;\n        setDonutsSelect((donutsSelect) => ({\n            ...donutsSelect,\n            value: value,\n        }));\n    };\n\n    const getFineSelectOptions = (elementName) => {\n        const selectedData = getDataInYearRange(yearSlider.value);\n        let result = selectedData.map((ele) => {\n            return ele[elementName];\n        });\n\n        // get unique options\n        return [...new Set(result)].sort();\n    };\n    const getDataInYearRange = (range) => {\n        return data.filter(\n            (ele) => range[0] <= ele[\"Release Year\"] && ele[\"Release Year\"] <= range[1]\n        );\n    };\n    const updateGeocode = async (fineSelectValue) => {\n        setGeoLoading(true);\n        const filteredData = data.filter(\n            (ele) =>\n                fineSelectValue.includes(ele[xAxis.value]) &&\n                (ele.Longitude === null || ele.Latitude === null)\n        );\n        const promises = filteredData.map((ele, idx) => getGeocodePromise(ele.Locations, idx));\n\n        return Promise.all(promises)\n            .then((responses) => {\n                return responses.map((response, idx) => {\n                    const data = response.data;\n\n                    return data.results.length !== 0\n                        ? data.results[0].geometry.location\n                        : { lat: undefined, lng: undefined };\n                });\n            })\n            .then((locations) => {\n                var newData = [...data];\n                locations.forEach((location, idx) => {\n                    try {\n                        newData[filteredData[idx].id] = {\n                            ...newData[filteredData[idx].id],\n                            Latitude: location.lat,\n                            Longitude: location.lng,\n                        };\n                    } catch (error) {\n                        console.log(error);\n                    }\n                });\n\n                setGeoLoading(false);\n\n                return newData;\n            })\n            .catch((error) => {\n                console.log(error);\n                // no update\n                return data;\n            });\n    };\n\n    const classes = useStyles();\n\n    return visible ? (\n        <React.Fragment>\n            {geoLoading ? (\n                <LinearProgress className={classes.progress} />\n            ) : (\n                <LinearProgress variant=\"determinate\" value={0} />\n            )}\n            <div className={classes.root} id=\"details-page\">\n                <Grid container spacing={2} alignItems=\"stretch\">\n                    <Grid className={classes.item} container item xs={2} direction=\"row\">\n                        <Paper className={classes.paper}>\n                            <GlobalControlPanel\n                                name=\"global-control-panel\"\n                                xAxis={{\n                                    ...xAxis,\n                                    onChange: handleXAxisChange,\n                                }}\n                                fineSelect={{\n                                    ...fineSelect,\n                                    onChange: handleFineSelectChange,\n                                }}\n                                topK={{\n                                    ...topK,\n                                    onChange: handleTopKChange,\n                                }}\n                                yearSlider={{\n                                    ...yearSlider,\n                                    onChange: handleYearSliderChange,\n                                }}\n                            />\n                        </Paper>\n                        <Paper className={classes.paper}>\n                            <DonutControlPanel\n                                name=\"donut-control-panel\"\n                                donutsTarget={{\n                                    ...donutsTarget,\n                                    onChange: handleDonutsTargetChange,\n                                }}\n                                donutsSelect={{\n                                    ...donutsSelect,\n                                    onChange: handleDonutsSelectChange,\n                                }}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid className={classes.item} item xs={8}>\n                        <Paper className={classes.paper}>\n                            <Test>\n                                <BarChart\n                                    data={data}\n                                    xAxisName={xAxis.value}\n                                    fineSelect={fineSelect}\n                                    topK={topK.value}\n                                    yearRange={yearSlider.value}\n                                />\n                            </Test>\n                        </Paper>\n                    </Grid>\n                    <Grid className={classes.item} item xs={2}>\n                        <Paper className={classes.paper}>\n                            <DonutsPanel\n                                data={data}\n                                constraints={{\n                                    xAxisName: xAxis.value,\n                                    yearRange: yearSlider.value,\n                                    target: donutsTarget.value,\n                                    selections: donutsSelect.value,\n                                }}\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid className={classes.item} item xs={12}>\n                        <Paper className={classes.paper} style={{ height: \"500px\" }}>\n                            <Map\n                                data={data}\n                                constraints={{\n                                    xAxisName: xAxis.value,\n                                    fineSelectValue: fineSelect.value,\n                                }}\n                            />\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        </React.Fragment>\n    ) : null;\n};\n\nexport default FocusPage;\n","import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nimport \"../css/Chord.css\";\n\nconst Chord = ({ data }) => {\n    const ref = useRef();\n\n    const width = window.innerHeight;\n    const height = window.innerHeight;\n    const radius = height / 2.5;\n    const horizontalShift = (width * 6) / 12; // it's a global shifting, not related to the grid in Chord.css\n\n    useEffect(() => {\n        // Data Preprocessing\n        const colorin = \"#00f\";\n        const colorout = \"#f00\";\n        const colornone = \"#ccc\";\n        const node_color = {\n            Title: \"#FF9C94\",\n            Location: \"#85BAF4\",\n            Director: \"#E4F56E\",\n        };\n        const tree = d3.cluster().size([2 * Math.PI, radius - 100]);\n        const line = d3\n            .lineRadial()\n            .curve(d3.curveBundle.beta(0.85))\n            .radius((d) => d.y)\n            .angle((d) => d.x);\n        const uniTitle = getColumnUniCount(data, \"Title\");\n        const uniLoc = getColumnUniCount(data, \"Locations\");\n        const uniDirector = getColumnUniCount(data, \"Director\");\n        const data_hierachy = hierachy_SF(data, uniTitle, uniLoc, uniDirector);\n        const root = tree(\n            bilink(\n                d3\n                    .hierarchy(data_hierachy)\n                    .sort(\n                        (a, b) =>\n                            d3.ascending(a.height, b.height) ||\n                            d3.ascending(a.data.name, b.data.name)\n                    )\n            )\n        );\n\n        // Plotting\n        const svg = d3.select(ref.current);\n        svg.append(\"g\")\n            .attr(\"font-family\", \"sans-serif\")\n            .attr(\"font-size\", 8)\n            .selectAll(\"g\")\n            .data(root.leaves())\n            .join(\"g\")\n            .attr(\"transform\", (d) => `rotate(${(d.x * 180) / Math.PI - 90}) translate(${d.y},0)`)\n            .append(\"text\")\n            .attr(\"dy\", \"0.31em\")\n            .attr(\"x\", (d) => (d.x < Math.PI ? 6 : -6))\n            .attr(\"fill\", (d) => node_color[d.parent])\n            .attr(\"text-anchor\", (d) => (d.x < Math.PI ? \"start\" : \"end\"))\n            .attr(\"transform\", (d) => (d.x >= Math.PI ? \"rotate(180)\" : null))\n            .text((d) => {\n                let text = d.data.name.replaceAll(\"_\", \" \");\n                return text.length <= 20 ? text : text.slice(0, 20).concat(\"...\");\n            })\n            .each(function (d) {\n                d.text = this;\n            })\n            .on(\"mouseover\", overed)\n            .on(\"mouseout\", outed)\n            .call((text) =>\n                text.append(\"title\").text(\n                    (d) => `${id(d).replaceAll(\".\", \" / \")}\n        ${d.outgoing.length} outgoing\n        ${d.incoming.length} incoming`\n                )\n            );\n\n        const link = svg\n            .append(\"g\")\n            .attr(\"stroke\", colornone)\n            .attr(\"stroke-width\", (d) => \"0.075%\")\n            .attr(\"fill\", \"none\")\n            .selectAll(\"path\")\n            .data(root.leaves().flatMap((leaf) => leaf.outgoing))\n            .join(\"path\")\n            .style(\"mix-blend-mode\", \"multiply\")\n            .attr(\"d\", ([i, o]) => line(i.path(o)))\n            .each(function (d) {\n                d.path = this;\n            });\n\n        function overed(event, d) {\n            link.style(\"mix-blend-mode\", null);\n            d3.select(this).attr(\"font-weight\", \"bold\");\n            d3.selectAll(d.incoming.map((d) => d.path))\n                .attr(\"stroke\", colorin)\n                .raise();\n            d3.selectAll(d.incoming.map(([d]) => d.text))\n                .attr(\"fill\", colorin)\n                .attr(\"font-weight\", \"bold\");\n            d3.selectAll(d.outgoing.map((d) => d.path))\n                .attr(\"stroke\", colorout)\n                .raise();\n            d3.selectAll(d.outgoing.map(([, d]) => d.text))\n                .attr(\"fill\", colorout)\n                .attr(\"font-weight\", \"bold\");\n        }\n\n        function outed(event, d) {\n            link.style(\"mix-blend-mode\", \"multiply\");\n            d3.select(this).attr(\"font-weight\", null);\n            d3.selectAll(d.incoming.map((d) => d.path)).attr(\"stroke\", null);\n            d3.selectAll(d.incoming.map(([d]) => d.text))\n                .attr(\"fill\", null)\n                .attr(\"font-weight\", null);\n            d3.selectAll(d.outgoing.map((d) => d.path)).attr(\"stroke\", null);\n            d3.selectAll(d.outgoing.map(([, d]) => d.text))\n                .attr(\"fill\", null)\n                .attr(\"font-weight\", null);\n        }\n    }, [data, radius]);\n\n    return (\n        <div className=\"chord\">\n            <svg className=\"d3-chord\" id={id} viewBox={`0 0 ${width} ${height}`}>\n                <g ref={ref} transform={`translate(${horizontalShift}, ${radius})`}></g>\n            </svg>\n        </div>\n    );\n};\n\nconst id = (node) => {\n    return `${node.parent ? id(node.parent) + \".\" : \"\"}${node.data.name}`;\n};\nconst bilink = (root) => {\n    const map = new Map(root.leaves().map((d) => [id(d), d]));\n    for (const d of root.leaves()) {\n        d.incoming = [];\n        d.outgoing = d.data.imports.map((i) => [d, map.get(i)]);\n    }\n    for (const d of root.leaves()) {\n        for (const o of d.outgoing) {\n            o[1].incoming.push(o);\n        }\n    }\n    return root;\n};\nconst construct_children = (data, tgtData, tgtInfo, restsInfo) => {\n    return tgtData.map((tgt) => {\n        if (tgt.name === \"Others\") {\n            return {\n                name: tgt.name,\n                size: tgt.count,\n                imports: [],\n            };\n        }\n\n        const selectedData = data.filter((ele) => ele[tgtInfo.name] === tgt.name);\n        let connections = selectedData.map((ele) => {\n            var results = [];\n            restsInfo.forEach((rest) => {\n                if (rest.list.includes(ele[rest.name])) {\n                    results.push(rest.prefix.concat(ele[rest.name]));\n                } else {\n                    results.push(rest.prefix.concat(\"Others\"));\n                }\n            });\n\n            return results;\n        });\n        connections = connections.reduce((acc, curr) => acc.concat(curr), []);\n        connections = [...new Set(connections)];\n\n        return {\n            name: tgt.name,\n            size: tgt.count,\n            imports: connections,\n        };\n    });\n};\nconst hierachy_SF = (data, uniTitle, uniLoc, uniDirector) => {\n    const titleInfo = {\n        name: \"Title\",\n        prefix: \"SF_Films.Title.\",\n        list: uniTitle.map((ele) => ele.name),\n    };\n    const locInfo = {\n        name: \"Locations\",\n        prefix: \"SF_Films.Locations.\",\n        list: uniLoc.map((ele) => ele.name),\n    };\n    const directorInfo = {\n        name: \"Director\",\n        prefix: \"SF_Films.Director.\",\n        list: uniDirector.map((ele) => ele.name),\n    };\n\n    const title = {\n        name: \"Title\",\n        children: construct_children(data, uniTitle, titleInfo, [locInfo, directorInfo]),\n    };\n    const loc = {\n        name: \"Locations\",\n        children: construct_children(data, uniLoc, locInfo, [titleInfo, directorInfo]),\n    };\n    const director = {\n        name: \"Director\",\n        children: construct_children(data, uniDirector, directorInfo, [locInfo, titleInfo]),\n    };\n\n    return {\n        name: \"SF_Films\",\n        children: [title, loc, director],\n    };\n};\nconst getColumnUniCount = (data, columnName) => {\n    var tgtList = data.map((ele) => ele[columnName]);\n\n    var tmp_counts = {};\n    for (var i = 0; i < tgtList.length; i++) {\n        tmp_counts[tgtList[i]] = 1 + (tmp_counts[tgtList[i]] || 0);\n    }\n\n    const entries = Object.entries(tmp_counts);\n    var uniCounts = entries.map((ele) => ({ name: ele[0], count: ele[1] }));\n    uniCounts = uniCounts.sort((a, b) => {\n        var A = a.count;\n        var B = b.count;\n        if (A < B) {\n            return 1;\n        }\n        if (A > B) {\n            return -1;\n        }\n\n        return 0; // if equal\n    });\n\n    const others = {\n        name: \"Others\",\n        count: uniCounts.slice(59).reduce((acc, curr) => acc + curr.count, 0),\n    };\n\n    uniCounts = uniCounts.slice(0, 59);\n    uniCounts.push(others);\n\n    return uniCounts;\n};\n\nexport default Chord;\n","import React from \"react\";\nimport Chord from \"./Chord\";\n\nconst OverviewPage = (props) => {\n    const { data, visible } = props;\n    return visible ? (\n        <div id=\"overview-page\">\n            <Chord data={data} />\n        </div>\n    ) : null;\n};\n\nexport default OverviewPage;\n","import React, { useState, useEffect } from \"react\";\nimport { csv } from \"d3\";\nimport { IconButton } from \"@material-ui/core\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"./css/App.css\";\n\nimport Drawer from \"./components/Drawer\";\nimport FocusPage from \"./components/FocusPage\";\nimport OverviewPage from \"./components/OverviewPage\";\n\nconst rawDataPath = \"/dataset/Film_Locations_in_San_Francisco.csv\";\n\nconst useStyles = makeStyles((theme) => ({\n    titleContainer: {\n        margin: 0,\n        padding: 0,\n        boxSizing: \"border-box\",\n    },\n    title: {\n        height: \"50px\",\n        backgroundColor: \"#5D10A8\",\n        color: \"white\",\n        paddingLeft: \"10px\",\n        paddingTop: \"5px\",\n        fontWeight: \"lighter\",\n        fontFamily: \"Roboto\",\n    },\n    iconBtn: {\n        position: \"absolute\",\n        right: \"10px\",\n    },\n    icon: {\n        color: \"white\",\n    },\n}));\n\nexport default function App(props) {\n    const [loading, setLoading] = useState(true);\n    const [data, setData] = useState([]);\n    const [drawerInfo, setDrawerInfo] = useState({\n        right: false,\n        page: \"Overview\",\n    });\n\n    useEffect(() => {\n        csv(process.env.PUBLIC_URL + rawDataPath)\n            .then((csv) => {\n                // Data Preprocessing\n                csv = csv.filter((ele) => ele.Locations !== \"\");\n                csv.forEach((ele, idx) => {\n                    csv[idx][\"Release Year\"] = +ele[\"Release Year\"];\n                    csv[idx][\"Title\"] = ele[\"Title\"]\n                        .replaceAll(\" \", \"_\")\n                        .replaceAll([\",\", \".\", \"\\\\\", '\"'], \"\");\n                    csv[idx][\"Locations\"] = ele[\"Locations\"]\n                        .replaceAll(\" \", \"_\")\n                        .replaceAll([\",\", \".\", \"\\\\\", '\"'], \"\");\n                    csv[idx][\"Director\"] = ele[\"Director\"]\n                        .replaceAll(\" \", \"_\")\n                        .replaceAll([\",\", \".\", \"\\\\\", '\"'], \"\");\n                    delete ele[\"Fun Facts\"];\n                });\n\n                return csv.map((ele, idx) => ({\n                    ...ele,\n                    id: idx,\n                    Latitude: null,\n                    Longitude: null,\n                }));\n            })\n            .then((csv) => {\n                // set \"data\"\n                setData(csv);\n            })\n            .then(() => {\n                // Set \"loading\"\n                setLoading(false);\n            });\n    }, []);\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n            return;\n        }\n\n        setDrawerInfo({ ...drawerInfo, [anchor]: open });\n    };\n\n    const isVisible = (pageName) => {\n        return drawerInfo.page === pageName ? true : false;\n    };\n\n    const classes = useStyles();\n\n    return loading ? (\n        <h1>Load Data...</h1>\n    ) : (\n        <div>\n            <IconButton\n                className={classes.iconBtn}\n                onClick={toggleDrawer(\"right\", true)}\n                onKeyDown={toggleDrawer(\"right\", false)}\n            >\n                <FormatListBulletedIcon className={classes.icon} />\n            </IconButton>\n            <h1 className={classes.title}>Film Locations in San Francisco</h1>\n            <Drawer\n                anchor={\"right\"}\n                drawerInfo={drawerInfo}\n                setDrawerInfo={setDrawerInfo}\n                toggleDrawer={toggleDrawer}\n            />\n            <div className={classes.root}>\n                <OverviewPage data={data} visible={isVisible(\"Overview\")} />\n                <FocusPage data={data} setData={setData} visible={isVisible(\"Focus\")} />\n            </div>\n        </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"./css/index.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <CssBaseline />\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//\n// const div = document.createElement(\"div\");\n// div.innerText(\"Hello\"); // slightly different with textContent\n// div.textContent(\"Hello\");\n// div.innerHTML(\"<strong>Hello</ strong>\");\n// div.remove();\n// div.getAttribute();\n// div.setAttribute();\n// div.removeAttribute();\n// div.classList.add();\n// div.classList.remove();\n// div.classList.toggle();\n// div.style;\n\n// document.body.append;\n// document.body.appendChild;\n// document.querySelector(\"body\");\n"],"sourceRoot":""}